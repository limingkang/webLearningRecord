(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{443:function(t,s,a){t.exports=a.p+"assets/img/1.6003567e.png"},444:function(t,s,a){t.exports=a.p+"assets/img/4.2e0412a0.png"},445:function(t,s,a){t.exports=a.p+"assets/img/2.0318779d.png"},446:function(t,s,a){t.exports=a.p+"assets/img/3.c39b2b30.png"},478:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("h3",{attrs:{id:"背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),n("ol",[n("li",[t._v("研发人员对业务了解不够深入，对核心数据概念模糊")]),t._v(" "),n("li",[t._v("研发人员对自己负责需求的意义、目的、效果等方面不够熟悉")]),t._v(" "),n("li",[t._v("页面性能对用户体验而言十分关键。每次重构对页面性能的提升，仅靠工程师开发设备的测试数据是没有说服力的，需要有大量的真实数据用于验证")]),t._v(" "),n("li",[t._v("资源挂了、加载出现异常，不能总靠用户投诉才后知后觉，需要主动报警")])]),t._v(" "),n("h3",{attrs:{id:"流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[t._v("#")]),t._v(" 流程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(443),alt:"An image"}})]),t._v(" "),n("p",[t._v("kafka是一种高吞吐量的分布式发布订阅消息系统，她有如下特性：")]),t._v(" "),n("ul",[n("li",[t._v("通过O(1)的磁盘数据结构提供消息的持久化，这种结构对于即使数以TB的消息存储也能够保持长时间的稳定性能")]),t._v(" "),n("li",[t._v("高吞吐量：即使是非常普通的硬件kafka也可以支持每秒数十万的消息")]),t._v(" "),n("li",[t._v("支持通过kafka服务器和消费机集群来分区消息")]),t._v(" "),n("li",[t._v("支持Hadoop并行数据加载\n卡夫卡的目的是提供一个发布订阅解决方案，它可以处理消费者规模的网站中的所有动作流数据。 这种动作（网页浏览，搜索和其他\n用户的行动）是在现代网络上的许多社会功能的一个关键因素。 这些数据通常是由于吞吐量的要求而通过处理日志和日志聚合来解决。\n对于像Hadoop的一样的日志数据和离线分析系统，但又要求实时处理的限制，这是一个可行的解决方案。kafka的目的是通过Hadoop\n的并行加载机制来统一线上和离线的消息处理，也是为了通过集群机来提供实时的消费")])]),t._v(" "),n("p",[t._v("Apache Flink是由Apache软件基金会开发的开源流处理框架，其核心是用Java和Scala编写的分布式流数据流引擎。Flink以数据\n并行和流水线方式执行任意流数据程序，Flink的流水线运行时系统可以执行批处理和流处理程序。此外，Flink的运行时本身也支持\n迭代算法的执行:")]),t._v(" "),n("ul",[n("li",[t._v("Flink提供现成的源和接收连接器，包括Apache Kafka、Amazon Kinesis、HDFS和Apache Cassandra等")]),t._v(" "),n("li",[t._v("Flink程序可以作为集群内的分布式系统运行，也可以以独立模式或在YARN、Mesos、基于Docker的环境和其他资源管理框架下进行部署")]),t._v(" "),n("li",[t._v("数据处理完成之后，我们还要为它指定数据的存储。我们可以从外部系统导入数据，亦可以将处理完的数据导入到外部系统，这个过程\n称为Sink。同Connector类似，Flink官方提供了很多的Sink供用户使用，用户也可以通过实现接口自定义Sink")])]),t._v(" "),n("h3",{attrs:{id:"监控数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监控数据"}},[t._v("#")]),t._v(" 监控数据")]),t._v(" "),n("p",[t._v("首先我们需要明确一个产品或者网页，普遍需要监控和上报的数据。监控的分为三个阶段：用户进入网页首页、用户在网页内部交互和交\n互中报错。每一个阶段需要监控和上报的数据如下图所示\n"),n("img",{attrs:{src:a(444),alt:"An image"}})]),t._v(" "),n("h2",{attrs:{id:"监控页面性能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监控页面性能"}},[t._v("#")]),t._v(" 监控页面性能")]),t._v(" "),n("p",[t._v("对于一个页面的性能采集我们主要关注两点")]),t._v(" "),n("ol",[n("li",[t._v("首屏：页面首次开始渲染的时间")]),t._v(" "),n("li",[t._v("白屏：用户可以消费页面内容的时间")])]),t._v(" "),n("h3",{attrs:{id:"performancetiming-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#performancetiming-api"}},[t._v("#")]),t._v(" PerformanceTiming API")]),t._v(" "),n("p",[t._v("一个支持IE9以上及webkit内核浏览器中用于记录页面加载和解析过程中关键时间点的机制")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部属性")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" performance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// memory 内存是非标准属性，只在 Chrome 有")]),t._v("\n    memory"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        usedJSHeapSize"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16100000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JS 对象（包括V8引擎内部对象）占用的内存，一定小于 totalJSHeapSize")]),t._v("\n        totalJSHeapSize"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("35100000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可使用的内存")]),t._v("\n        jsHeapSizeLimit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("793000000")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内存大小限制")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    navigation"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        redirectCount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有重定向的话，页面通过几次重定向跳转而来")]),t._v("\n        type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0   即 TYPE_NAVIGATENEXT 正常进入的页面（非刷新、非重定向等）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1   即 TYPE_RELOAD       通过 window.location.reload() 刷新的页面")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2   即 TYPE_BACK_FORWARD 通过浏览器的前进后退按钮进入的页面（历史记录）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 255 即 TYPE_UNDEFINED    非以上方式进入的页面")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    timing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在同一个浏览器上下文中，前一个网页（与当前页面不一定同域）unload 的时间戳，如果无前一个网页 unload ，则与 fetchStart 值相等")]),t._v("\n        navigationStart"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1441112691935")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前一个网页（与当前页面同域）unload 的时间戳，如果无前一个网页 unload 或者前一个网页与当前页面不同域，则值为 0")]),t._v("\n        unloadEventStart"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 和 unloadEventStart 相对应，返回前一个网页 unload 事件绑定的回调函数执行完毕的时间戳")]),t._v("\n        unloadEventEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...........")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("该属性的兼容性很好，但是在spa场景无法获取正确的首屏，spa页面在触发onload事件的时候只是渲染了一个空壳骨架屏")]),t._v(" "),n("h3",{attrs:{id:"fcp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fcp"}},[t._v("#")]),t._v(" FCP")]),t._v(" "),n("p",[t._v("首次内容绘制，FCP（First Contentful Paint），这个指标用于记录页面首次绘制文本、图片、非空白 Canvas 或 SVG 的时间")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" entries "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" entries"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Process "mark" and "frame" events')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("entryTypes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paint"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"lcp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lcp"}},[t._v("#")]),t._v(" LCP")]),t._v(" "),n("p",[t._v("最大内容绘制，LCP（Largest Contentful Paint），用于记录视窗内最大的元素绘制的时间，该时间会随着页面渲染变化而变\n化，因为页面中的最大元素在渲染过程中可能会发生改变，另外该指标会在用户第一次交互后停止记录")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" entries "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lastentry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entries"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("entries"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些加载跨域图片资源的时候renderTime可能不存在")]),t._v("\n  lcp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastentry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" lastentry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTime\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'largest-contentful-paint'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffered"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"tti"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tti"}},[t._v("#")]),t._v(" TTI")]),t._v(" "),n("p",[t._v("首次可交互时间，TTI（Time to Interactive）。这个指标计算过程略微复杂，它需要满足以下几个条件")]),t._v(" "),n("ol",[n("li",[t._v("从 FCP 指标后开始计算")]),t._v(" "),n("li",[t._v("持续 5 秒内无长任务（执行时间超过 50 ms）且无两个以上正在进行中的 GET 请求")]),t._v(" "),n("li",[t._v("往前回溯至 5 秒前的最后一个长任务结束的时间\n对于用户交互（比如点击事件），推荐的响应时间是 100ms 以内。那么为了达成这个目标，推荐在空闲时间里执行任务不超过 50ms\n（W3C 也有这样的标准规定），这样能在用户无感知的情况下响应用户的交互，否则就会造成延迟感")])]),t._v(" "),n("p",[t._v("TTI 主要是通过跟踪耗时较长的任务来确定，设置PerformanceObserver观察类型为 longtask 的条目，然后可以根据耗时较长\n的条目的startTime和duration，来大致确认页面处于idle的时间，从而确定 TTI 指标。Google希望将 TTI 指标标准化，并通\n过 PerformanceObserver 在浏览器中公开，但目前并不支持。目前只能通过一个 polyfill，检测目前的 TTI，适用于所有支持\nLong Tasks API 的浏览器。该 polyfill 公开 getFirstConsistentlyInteractive() 方法，后者返回使用 TTI 值进行\n解析的 promise。用法如下所示：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先是在首页头部head标签中设置PerformanceObserver，并指定监控类型为longtask")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// collect the longtask")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PerformanceLongTaskTiming"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__tti "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" observer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entry "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// observe the longtask to get the time to interactive (TTI)")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("entryType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'longtask'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__tti"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    observer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("entryTypes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'longtask'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后引入tti-polyfill.js(可通过npm包获取)，获取到tti的值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ttiPolyfill "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/tti-polyfill.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nttiPolyfill"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirstConsistentlyInteractive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("tti")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("你可以通过安装 Lighthouse 插件来获取如下指标\n"),n("img",{attrs:{src:a(445),alt:"An image"}})]),t._v(" "),n("h3",{attrs:{id:"fmp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fmp"}},[t._v("#")]),t._v(" FMP")]),t._v(" "),n("p",[t._v("针对这种情况Google lighthouse提出了FMP的概念，first meaning paint, 也就是主要内容(页面渲染过中元素增量最大的点)可见时间\n根据这个我们可以分步骤实现：")]),t._v(" "),n("ul",[n("li",[t._v("通过MutationObserver监听页面元素变化")]),t._v(" "),n("li",[t._v("遍历每次新增的元素，并计算这些元素的得分总和")]),t._v(" "),n("li",[t._v("如果元素可见，得分为 1 * weight(权重), 如果元素不可见，得分为0")]),t._v(" "),n("li",[t._v("根据不同标签给出不同权重")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementImportanceWeight")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Element")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ignoreContentTagNameList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SCRIPT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'STYLE'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'META'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HEAD'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vitalContentTagNameList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CANVAS'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OBJECT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EMBED'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'VIDEO'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SVG'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'IMG'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'IMAGE'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ignoreContentTagNameList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vitalContentTagNameList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("大体计算思路如下图，采用的是深度优先算法，如果子元素可见，那父元素可见，不再计算。 同样的，如果最后一个元素可见，那前\n面的兄弟元素也可见。通过深度优先算法，性能有了大幅的提升\n"),n("img",{attrs:{src:a(446),alt:"An image"}})]),t._v(" "),n("h3",{attrs:{id:"特殊情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特殊情况"}},[t._v("#")]),t._v(" 特殊情况")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("如果页面还未渲染完成前用户进行了点击、滑动等交互，或者页面发生了切换，则视为页面渲染过程中出现了噪音、不上报性能\n数据、只上报一个pv事件")])]),t._v(" "),n("li",[n("p",[t._v("对于微信小程序或者支付宝小程序这种他们本身就没有dom元素我们可以通过对其触发渲染的方法setDate和requset做aop切面\n统计在200ms内没有正在进行的请求并且没有页面渲染更新")])]),t._v(" "),n("li",[n("p",[t._v("我们可以在小程序的page对象上进行封装，页面初始化的时候使用我们封装的方法来初始化，捕获原生request对其参数做处理，\n处理的函数可单独抽离到埋点包中暴露出来例如trackHttp(req)")])])]),t._v(" "),n("h2",{attrs:{id:"监控js异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监控js异常"}},[t._v("#")]),t._v(" 监控js异常")]),t._v(" "),n("ul",[n("li",[t._v("对于h5监控error、unhandledrejection事件")]),t._v(" "),n("li",[t._v("对于框架类型h5我们无法捕获到上面的事件，例如vue他自身内部对所有错误处理了都走到自己的errorhandle方法不会去触发错误，\n我们可以通过vue.config.errorHandler配置错误事件处理也可以通过劫持console.error来处理")]),t._v(" "),n("li",[t._v("对于支付宝小程序微信小程序他们各自都有自己的全局错误捕获钩子可以在里面直接发送埋点记录处理，例如支付宝小程序有my.onError、\nmy.onUnhandledRejection 等监听事件")])]),t._v(" "),n("p",[t._v("对于监控到的错误我们可以开始发送日志进行上报，可以对错误进行再次组装成新的格式上报方便后期处理过滤分类")]),t._v(" "),n("h2",{attrs:{id:"网络监控"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络监控"}},[t._v("#")]),t._v(" 网络监控")]),t._v(" "),n("p",[t._v("对h5页面的open、send、fetch等方法做切面，让每个请求都带上requestId方便后续链路追踪，这个由前端生产可以使用现有的包；")]),t._v(" "),n("p",[t._v("js-shortid是一个基于node.js的开源短ID的产生器， 其生成的短ID满足无序、不可预测、URL地址友好以及足够短且据有唯一的\n基本特征，他由两个字符串构成—— 时间序号和多个随机数；")]),t._v(" "),n("p",[t._v("这时候我们也可以对请求成功后使用"),n("code",[t._v("window.performance.getEntriesByName(networkUrl)")]),t._v("来获取ssl等时间，加上requestid\n一起进行埋点上报")]),t._v(" "),n("h2",{attrs:{id:"埋点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#埋点"}},[t._v("#")]),t._v(" 埋点")]),t._v(" "),n("p",[t._v("上面介绍了前端监控的作用，那么如何实现前端监控呢，实现前端监控的步骤为：前端埋点和上报、数据处理和数据分析。首要的步骤就\n是前端埋点和上报，也就是数据的收集阶段。数据收集的丰富性和准确性会影响对产品线上效果的判别结果，目前埋点主要有三种方式")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("代码埋点，就是以嵌入代码的形式进行埋点，比如需要监控用户的点击事件，会选择在用户点击时，插入一段代码，保存这个监听行\n为或者直接将监听行为以某一种数据格式直接传递给server端。此外比如需要统计产品的PV和UV的时候，需要在网页的初始化时，发送\n用户的访问信息等（优点：可以在任意时刻，精确的发送或保存所需要的数据信息； 缺点： 工作量较大，每一个组件的埋点都需要添加相应的代码）")])]),t._v(" "),n("li",[n("p",[t._v("可视化埋点，通过可视化交互的手段，代替代码埋点。将业务代码和埋点代码分离，提供一个可视化交互的页面，输入为业务代码，通\n过这个可视化系统，可以在业务代码中自定义的增加埋点事件等等，最后输出的代码耦合了业务代码和埋点代码（可视化埋点可以埋点的控件有限，不能手动定制）")])]),t._v(" "),n("li",[n("p",[t._v("无埋点并不是说不需要埋点，而是全部埋点，前端的任意一个事件都被绑定一个标识，所有的事件都别记录下来。通过定期上传记录\n文件，配合文件解析，解析出来我们想要的数据，并生成可视化报告供专业人员分析因此实现“无埋点”统计（优点： 由于采集的是全量\n数据，所以产品迭代过程中是不需要关注埋点逻辑的，也不会出现漏埋、误埋等现象； 缺点：无埋点采集全量数据，给数据传输和服务\n器增加压力而且无法灵活的定制各个事件所需要上传的数据）")])])]),t._v(" "),n("h3",{attrs:{id:"上报哪些数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#上报哪些数据"}},[t._v("#")]),t._v(" 上报哪些数据")]),t._v(" "),n("p",[t._v("提供一个大概的数据格式")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tinfo "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      logerType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"network"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t \t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标示日志类型")]),t._v("\n      timestamp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 时间戳，格式后端要求")]),t._v("\n      \tseconds"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1569386598")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单位秒")]),t._v("\n        nanos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 纳秒，获取不到统一为 0")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n      logid"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ididiidididiid"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 随机 id表示此次日志的唯一性 ")]),t._v("\n      info"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        eventId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eventid"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件标识,我们可以标记为页面埋点，按钮埋点或者自定义的")]),t._v("\n        sessionId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ididiidididiid"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会话 id")]),t._v("\n        sequenceId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 序列 id，自增，后面可以更多参数")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      baseparams"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \t\t\t\t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字段值必须字符串")]),t._v("\n        appName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"limingkang"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//应用名称")]),t._v("\n        appVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//APP版本")]),t._v("\n        platform"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alipay"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应用程序的终端类型")]),t._v("\n        os"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iOS"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设备操作系统类型，iOS，Android")]),t._v("\n        osVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6.0.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设备系统版本")]),t._v("\n        manufacturer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IPHONE"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           \t  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设备品牌")]),t._v("\n        deviceModel"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iPhone 6"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        \t\t  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设备类型")]),t._v("\n        network"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WIFI"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                   \t  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// APP运行的网络环境，2G，3G，4G，WIFI")]),t._v("\n        carrier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"中国移动"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 电信运营商")]),t._v("\n        userGuid"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"标示用户唯一id"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用户id")]),t._v("\n        sdkVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.19.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UBT的SDK版本")]),t._v("\n        screenHeight"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"603"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               \t  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 屏幕高度")]),t._v("\n        screenWidth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"375"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                \t  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 屏幕宽度")]),t._v("\n        adCode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"330106"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPS定位县级code")]),t._v("\n        cityCode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0571"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPS定位城市code")]),t._v("\n        latitude"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30.274108"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPS定位纬度")]),t._v("\n        longitude"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"120.128961"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPS定位经度")]),t._v("\n        ip"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"43.254.220.32"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问用户的IP地址")]),t._v("\n        language"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zh-Hans"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语言")]),t._v("\n        releaseVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20190831"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发布版本(仅支付宝小程序)")]),t._v("\n        ssid"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uuid_2019-09-26"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 唯一用户设备标识, 写入缓存每次都取他")]),t._v("\n        url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.a.c/c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户访问页面的URL")]),t._v("\n        version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.1.55"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \t\t\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 系统版本")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("同时我们的埋点库也会暴露一些方法，支持绑定一些其他想要自定义的值，从而更好的增加可拓展性")]),t._v(" "),n("h3",{attrs:{id:"数据上报"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据上报"}},[t._v("#")]),t._v(" 数据上报")]),t._v(" "),n("p",[t._v("sentry是一个实时事件日志记录和聚合平台，我们这边采取自定义的方式，使用自己的方法去发送，首先我们得结局数据持久化的问题，\n不能用户每一个操作后，就立即将该行为日志传到服务器，对于具有大量用户同时在线的应用，如果用户一操作就立即上传日志，无异\n于对日志服务器进行DDOS攻击。因此，我们先将这些日志存储在用户客户端本地，达到一定条件之后，再同时打包上传一组日志，目前可\n用的持久化方案可选项也比较多了，主要有"),n("code",[t._v("Cookie、localStorage、sessionStorage、IndexedDB、webSQL 、FileSystem")]),t._v("等")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("存储方式")]),t._v(" "),n("th",[t._v("cookie")]),t._v(" "),n("th",[t._v("localStorage")]),t._v(" "),n("th",[t._v("sessionStorage")]),t._v(" "),n("th",[t._v("IndexedDB")]),t._v(" "),n("th",[t._v("webSQL")]),t._v(" "),n("th",[t._v("FileSystem")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("类型")]),t._v(" "),n("td",[t._v("key-value")]),t._v(" "),n("td",[t._v("key-value")]),t._v(" "),n("td",[t._v("NoSQL")]),t._v(" "),n("td",[t._v("SQL")]),t._v(" "),n("td"),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("数据格式")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("object")]),t._v(" "),n("td"),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("容量")]),t._v(" "),n("td",[t._v("4k")]),t._v(" "),n("td",[t._v("5M")]),t._v(" "),n("td",[t._v("5M")]),t._v(" "),n("td",[t._v("500M")]),t._v(" "),n("td",[t._v("60M")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("进程")]),t._v(" "),n("td",[t._v("同步")]),t._v(" "),n("td",[t._v("同步")]),t._v(" "),n("td",[t._v("同步")]),t._v(" "),n("td",[t._v("异步")]),t._v(" "),n("td",[t._v("异步")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("检索")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("key")]),t._v(" "),n("td",[t._v("key,index")]),t._v(" "),n("td",[t._v("field")]),t._v(" "),n("td",[t._v("field")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("性能")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("读快写慢")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("读快写慢")]),t._v(" "),n("td"),t._v(" "),n("td")])])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("综合之后，IndexedDB是最好的选择，它具有容量大、异步的优势，异步的特性保证它不会对界面的渲染产生阻塞。而且IndexedDB是分\n库的，每个库又分store，还能按照索引进行查询，具有完整的数据库管理思维，比localStorage更适合做结构化数据管理。但是它有\n一个缺点，就是api非常复杂，不像localStorage那么简单直接。针对这一点，我们可以使用hello-indexeddb这个工具，它用\nPromise对复杂api进行来封装，简化操作，使IndexedDB的使用也能做到localStorage一样便捷。另外，IndexedDB是被广泛支\n持的HTML5标准，兼容大部分浏览器，因此不用担心它的发展前景")])]),t._v(" "),n("li",[n("p",[t._v("对于小程序这种我们只能通过写入localStorage来实现，注意要加上节流，否则写入太多此会导致手机耗电很快")])]),t._v(" "),n("li",[n("p",[t._v("我们对于不同类型的日志采用不同的上报策略，像网络异常、js error这些日志需要立即上报，对于页面埋点性能埋点我们采用合并上\n报的策略，一个是每隔30s发送数据，另一个是队列里超过10条也会上报，我们可以暴露方法，让使用者可以自由配置这个时间和条数")])]),t._v(" "),n("li",[n("p",[t._v("对于性能采集库我们在初始化的时候可以先请求cdn上一个配置文件（该文件采用协商缓存），该文件里面有采样率，前端生产随机数\n比较采样率来确定是否上报数据，因为我们只是关注总体的性能，不必每个人每次都上报")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);